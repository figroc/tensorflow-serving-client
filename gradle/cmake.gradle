task cmake {
  dependsOn "generateProto"
  ext {
    distEnv = dist.plus([source: "${protoGenMainRel}/cpp"])
  }
  inputs.file "CMakeLists.txt"
  inputs.file "Config.cmake"
  inputs.dir distEnv.source
  outputs.dir "${buildDir}/cmake"
  doLast {
    exec {
      workingDir "${buildDir}"
      environment buildEnviron(distEnv)
      commandLine "cmake", "-DCMAKE_INSTALL_PREFIX=", "-DCMAKE_BUILD_TYPE=${dist.build}", ".."
    }
    exec {
      workingDir "${buildDir}"
      environment buildEnviron(distEnv)
      commandLine "make", "DESTDIR=cmake", "install"
    }
  }
}

task __cpp__ {
  dependsOn "cmake"
  ext {
    src = "cpp"
    cfg = file("CMakeLists.txt")
    tmp = file("${buildDir}/CMakeLists.txt")
  }
  inputs.file cfg
  inputs.dir cmake.distEnv.source
  outputs.file cfg
  outputs.dir src
  ext {
    distEnv = cmake.distEnv.plus([source: src])
    replace = buildEnviron(distEnv, "ENV_TFSCLIENT")
    inlists = replace.collect{k, v -> "\${${k}}"}.join(",")
  }
  doLast {
    copy {
      from cmake.distEnv.source
      into src
    }
    exec {
      standardInput cfg.newInputStream()
      standardOutput tmp.newOutputStream()
      commandLine "sed", "s/ENV{/{ENV_/g"
    }
    exec {
      standardInput tmp.newInputStream()
      standardOutput cfg.newOutputStream()
      environment replace
      commandLine "envsubst", inlists
    }
  }
}
