//---export-begin---//
group = "io.opil"

dependencies {
  compileOnly "javax.annotation:javax.annotation-api:1.3.2"
  implementation "com.google.protobuf:protobuf-java:${vers.proto}"
  implementation "io.grpc:grpc-protobuf:${vers.grpc}"
  implementation "io.grpc:grpc-stub:${vers.grpc}"
}

compileJava {
  options.debug = dist.build != "release"
}
//---export-end---//

sourceSets {
  generated {
    java {
      srcDir "${protoGenMainDir}/java"
    }
  }
}

javadoc {
  source sourceSets.generated.java
  options.addStringOption("Xdoclint:none", "-quiet")
}

task java {
  dependsOn "build"
}

task __java__ {
  dependsOn "build"
  ext {
    src = "java"
    cfg = file("build.gradle")
    sub = file("gradle/java.gradle")
    export = ["/---","export-begin","---/,/---","export-end","---/","p"].join("")
  }
  inputs.file cfg
  inputs.file sub
  inputs.dir "${protoGenMainDir}/${src}"
  outputs.file cfg
  outputs.dir src
  doLast {
    copy {
      from "${protoGenMainDir}/${src}"
      into src
    }
    exec {
      standardInput cfg.newInputStream()
      standardOutput file("${buildDir}/build.gradle").newOutputStream()
      commandLine "sed", "-n", export
    }
    exec {
      standardInput sub.newInputStream()
      standardOutput file("${buildDir}/java.gradle").newOutputStream()
      commandLine "sed", "-n", export
    }
    exec {
      standardOutput file("build.gradle").newOutputStream()
      commandLine "cat", "${buildDir}/build.gradle", "${buildDir}/java.gradle"
    }
    cfg.append("// @generated\nsourceSets{ main{ java{ srcDir \"${src}\" } } }\n")
  }
}
