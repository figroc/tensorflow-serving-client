// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/model_management.proto

#include "tensorflow_serving/apis/model_management.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ModelServerConfig_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_5fserving_2futil_2fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusProto_tensorflow_5fserving_2futil_2fstatus_2eproto;
namespace tensorflow {
namespace serving {
class ReloadConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReloadConfigRequest> _instance;
} _ReloadConfigRequest_default_instance_;
class ReloadConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReloadConfigResponse> _instance;
} _ReloadConfigResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static void InitDefaultsscc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ReloadConfigRequest_default_instance_;
    new (ptr) ::tensorflow::serving::ReloadConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ReloadConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto}, {
      &scc_info_ModelServerConfig_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::serving::_ReloadConfigResponse_default_instance_;
    new (ptr) ::tensorflow::serving::ReloadConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::serving::ReloadConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto}, {
      &scc_info_StatusProto_tensorflow_5fserving_2futil_2fstatus_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ReloadConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ReloadConfigRequest, config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ReloadConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::ReloadConfigResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::serving::ReloadConfigRequest)},
  { 6, -1, sizeof(::tensorflow::serving::ReloadConfigResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_ReloadConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::serving::_ReloadConfigResponse_default_instance_),
};

const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.tensorflow_serving/apis/model_manageme"
  "nt.proto\022\022tensorflow.serving\0323tensorflow"
  "_serving/config/model_server_config.prot"
  "o\032$tensorflow_serving/util/status.proto\""
  "L\n\023ReloadConfigRequest\0225\n\006config\030\001 \001(\0132%"
  ".tensorflow.serving.ModelServerConfig\"G\n"
  "\024ReloadConfigResponse\022/\n\006status\030\001 \001(\0132\037."
  "tensorflow.serving.StatusProtoB\003\370\001\001b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_deps[2] = {
  &::descriptor_table_tensorflow_5fserving_2fconfig_2fmodel_5fserver_5fconfig_2eproto,
  &::descriptor_table_tensorflow_5fserving_2futil_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_sccs[2] = {
  &scc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base,
  &scc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto = {
  false, false, descriptor_table_protodef_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto, "tensorflow_serving/apis/model_management.proto", 323,
  &descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_once, descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_sccs, descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto::offsets,
  file_level_metadata_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto, 2, file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto, file_level_service_descriptors_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto)), true);
namespace tensorflow {
namespace serving {

// ===================================================================

void ReloadConfigRequest::InitAsDefaultInstance() {
  ::tensorflow::serving::_ReloadConfigRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::tensorflow::serving::ModelServerConfig*>(
      ::tensorflow::serving::ModelServerConfig::internal_default_instance());
}
class ReloadConfigRequest::_Internal {
 public:
  static const ::tensorflow::serving::ModelServerConfig& config(const ReloadConfigRequest* msg);
};

const ::tensorflow::serving::ModelServerConfig&
ReloadConfigRequest::_Internal::config(const ReloadConfigRequest* msg) {
  return *msg->config_;
}
void ReloadConfigRequest::clear_config() {
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
}
ReloadConfigRequest::ReloadConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ReloadConfigRequest)
}
ReloadConfigRequest::ReloadConfigRequest(const ReloadConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_config()) {
    config_ = new ::tensorflow::serving::ModelServerConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ReloadConfigRequest)
}

void ReloadConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base);
  config_ = nullptr;
}

ReloadConfigRequest::~ReloadConfigRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ReloadConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReloadConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete config_;
}

void ReloadConfigRequest::ArenaDtor(void* object) {
  ReloadConfigRequest* _this = reinterpret_cast< ReloadConfigRequest* >(object);
  (void)_this;
}
void ReloadConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReloadConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReloadConfigRequest& ReloadConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReloadConfigRequest_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base);
  return *internal_default_instance();
}


void ReloadConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ReloadConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReloadConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelServerConfig config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReloadConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ReloadConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelServerConfig config = 1;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ReloadConfigRequest)
  return target;
}

size_t ReloadConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ReloadConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.serving.ModelServerConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReloadConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ReloadConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReloadConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ReloadConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ReloadConfigRequest)
    MergeFrom(*source);
  }
}

void ReloadConfigRequest::MergeFrom(const ReloadConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ReloadConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    _internal_mutable_config()->::tensorflow::serving::ModelServerConfig::MergeFrom(from._internal_config());
  }
}

void ReloadConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ReloadConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigRequest::CopyFrom(const ReloadConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ReloadConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigRequest::IsInitialized() const {
  return true;
}

void ReloadConfigRequest::InternalSwap(ReloadConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(config_, other->config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReloadConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReloadConfigResponse::InitAsDefaultInstance() {
  ::tensorflow::serving::_ReloadConfigResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::tensorflow::serving::StatusProto*>(
      ::tensorflow::serving::StatusProto::internal_default_instance());
}
class ReloadConfigResponse::_Internal {
 public:
  static const ::tensorflow::serving::StatusProto& status(const ReloadConfigResponse* msg);
};

const ::tensorflow::serving::StatusProto&
ReloadConfigResponse::_Internal::status(const ReloadConfigResponse* msg) {
  return *msg->status_;
}
void ReloadConfigResponse::clear_status() {
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
}
ReloadConfigResponse::ReloadConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.ReloadConfigResponse)
}
ReloadConfigResponse::ReloadConfigResponse(const ReloadConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::tensorflow::serving::StatusProto(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.ReloadConfigResponse)
}

void ReloadConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base);
  status_ = nullptr;
}

ReloadConfigResponse::~ReloadConfigResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.ReloadConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReloadConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ReloadConfigResponse::ArenaDtor(void* object) {
  ReloadConfigResponse* _this = reinterpret_cast< ReloadConfigResponse* >(object);
  (void)_this;
}
void ReloadConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReloadConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReloadConfigResponse& ReloadConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReloadConfigResponse_tensorflow_5fserving_2fapis_2fmodel_5fmanagement_2eproto.base);
  return *internal_default_instance();
}


void ReloadConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.ReloadConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReloadConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tensorflow.serving.StatusProto status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReloadConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.ReloadConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.StatusProto status = 1;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.ReloadConfigResponse)
  return target;
}

size_t ReloadConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.ReloadConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.serving.StatusProto status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReloadConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.serving.ReloadConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReloadConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.serving.ReloadConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.serving.ReloadConfigResponse)
    MergeFrom(*source);
  }
}

void ReloadConfigResponse::MergeFrom(const ReloadConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.ReloadConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    _internal_mutable_status()->::tensorflow::serving::StatusProto::MergeFrom(from._internal_status());
  }
}

void ReloadConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.serving.ReloadConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigResponse::CopyFrom(const ReloadConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.ReloadConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigResponse::IsInitialized() const {
  return true;
}

void ReloadConfigResponse::InternalSwap(ReloadConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReloadConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::ReloadConfigRequest* Arena::CreateMaybeMessage< ::tensorflow::serving::ReloadConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ReloadConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::ReloadConfigResponse* Arena::CreateMaybeMessage< ::tensorflow::serving::ReloadConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::ReloadConfigResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
