//---export-begin---//
ext {
  vers = [tfs: file("VERSION").text.trim(),
          jvm: "8",
          grpc: "1.26.0",
          proto: "3.11.0"]
  dist = [build: "release",
          name: [_: project.name,
                 title: project.name.tokenize("-").collect{it.capitalize()}.join(" "),
                 snake: project.name.replaceAll("-", "_")],
          version: [_: vers.tfs,
                    grpc: [_: vers.grpc,
                           dotnet: vers.grpc.tokenize(".").withIndex().collect{ v, i ->
                                     i == 0 ? ((v as int) + 1) : v
                                   }.join("."),
                           node: "1.24.0",
                           rust: "0.4.6"],
                    proto: [_: vers.proto,
                            go: "1.3.2",
                            rust: "2.10.1"]],
          license: "Apache-2.0",
          author: [_: "Figroc Chen <figroc@gmail.com>",
                   id: "figroc",
                   name: "Figroc Chen",
                   email: "figroc@gmail.com"],
          url: "https://github.com/figroc/tensorflow-serving-client",
          description: "A prebuilt tensorflow serving client from the tensorflow serving proto files"]
}

version = "${vers.tfs}"

apply plugin: "java-library"

sourceCompatibility = "1.${vers.jvm}"
targetCompatibility = "1.${vers.jvm}"

repositories {
  mavenCentral()
}
//---export-end---//
//---export-begin---//
group = "io.opil"

dependencies {
  compileOnly "javax.annotation:javax.annotation-api:1.3.2"
  implementation "com.google.protobuf:protobuf-java:${vers.proto}"
  implementation "io.grpc:grpc-protobuf:${vers.grpc}"
  implementation "io.grpc:grpc-stub:${vers.grpc}"
}

compileJava {
  options.debug = dist.build != "release"
}
//---export-end---//
// @generated
sourceSets{ main{ java{ srcDir "java" } } }
