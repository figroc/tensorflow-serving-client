cmake_minimum_required(VERSION 3.5)

set(TFSCLIENT_NAME "tensorflow-serving-client")
set(TFSCLIENT_VERSION "2.0.0")
set(TFSCLIENT_VERSION_GRPC "1.23.0")
set(TFSCLIENT_VERSION_PROTO "3.10.0")

set(CMAKE_BUILD_TYPE "release")

project(${TFSCLIENT_NAME} VERSION ${TFSCLIENT_VERSION})

find_package(Protobuf ${TFSCLIENT_VERSION_PROTO} REQUIRED)
find_package(gRPC ${TFSCLIENT_VERSOIN_GRPC} CONFIG)
if(gRPC_FOUND)
  set(GRPCPP_INCLUDE_DIRS $<TARGET_PROPERTY:gRPC::grpc++,INTERFACE_INCLUDE_DIRECTORIES>)
  set(GRPCPP_LIBRARIES $<TARGET_PROPERTY:gRPC::grpc++,INTERFACE_LINK_LIBRARIES>)
else()
  find_package(PkgConfig REQUIRED)
  pkg_search_module(GRPC REQUIRED grpc)
  pkg_search_module(GRPCPP REQUIRED grpc++>=${TFSCLIENT_VERSION_GRPC})
  list(APPEND GRPCPP_INCLUDE_DIRS ${GRPC_INCLUDE_DIRS})
  list(APPEND GRPCPP_LIBRARIES ${GRPC_LIBRARIES})
endif()

set(PROTO_GENERATED "${CMAKE_SOURCE_DIR}/cpp")
file(GLOB_RECURSE PROTO_SOURCES "${PROTO_GENERATED}/*.cc")

add_library(${TFSCLIENT_NAME} STATIC ${PROTO_SOURCES})
target_compile_features(${TFSCLIENT_NAME} PUBLIC cxx_std_11)
target_include_directories(${TFSCLIENT_NAME}
  PUBLIC
    $<BUILD_INTERFACE:${PROTO_GENERATED}>
    $<INSTALL_INTERFACE:include>
  PRIVATE
    ${GRPCPP_INCLUDE_DIRS}
    ${PROTOBUF_INCLUDE_DIRS})
target_link_libraries(${TFSCLIENT_NAME}
  PUBLIC
    ${GRPCPP_LIBRARIES}
    ${PROTOBUF_LIBRARIES})

include(InstallRequiredSystemLibraries)
set(CPACK_PACKAGE_VERSION ${TFSCLIENT_VERSION})
set(CPACK_PACKAGE_VENDOR "Figroc Chen")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A prebuilt tensorflow serving client from the tensorflow serving proto files")
set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
include(CPack)

set(TFSCLIENT_TARGETS "${TFSCLIENT_NAME}-targets")
set(TFSCLIENT_TARGETF "${TFSCLIENT_TARGETS}.cmake")
set(TFSCLIENT_CONFIGF "${TFSCLIENT_NAME}-config.cmake")
install(TARGETS ${TFSCLIENT_NAME} EXPORT ${TFSCLIENT_TARGETS}
  ARCHIVE DESTINATION lib INCLUDES DESTINATION include)
install(EXPORT ${TFSCLIENT_TARGETS} FILE ${TFSCLIENT_TARGETF} DESTINATION lib/cmake)
install(DIRECTORY "${PROTO_GENERATED}/" DESTINATION include FILES_MATCHING PATTERN "*.h")

include(CMakePackageConfigHelpers)
configure_package_config_file("${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake"
  "${CMAKE_CURRENT_BINARY_DIR}/${TFSCLIENT_CONFIGF}" INSTALL_DESTINATION lib/cmake
  NO_SET_AND_CHECK_MACRO NO_CHECK_REQUIRED_COMPONENTS_MACRO)
install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${TFSCLIENT_CONFIGF}" DESTINATION lib/cmake)

export(EXPORT ${TFSCLIENT_TARGETS} FILE "${CMAKE_CURRENT_BINARY_DIR}/${TFSCLIENT_TARGETF}")
